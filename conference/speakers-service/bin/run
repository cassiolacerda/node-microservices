#!/usr/bin/env node

const axios = require("axios");

const http = require("http");

const config = require("../config")[process.env.NODE_ENV || "development"];

const log = config.log();

const service = require("../server/service")(config);

const server = http.createServer(service);

// If port is omitted or is 0, the operating system will assign an arbitrary unused port https://nodejs.org/api/net.html
server.listen(0);

server.on("listening", () => {
  const registerService = () =>
    axios.put(
      `http://localhost:3000/register/${config.name}/${config.version}/${
        server.address().port
      }`
    );

  const unregisterService = () =>
    axios.delete(
      `http://localhost:3000/register/${config.name}/${config.version}/${
        server.address().port
      }`
    );

  registerService();

  const interval = setInterval(registerService, 20000);

  const cleanup = async () => {
    clearInterval(interval);
    await unregisterService();
  };

  process.on("uncaughtException", async () => {
    await cleanup();
    process.exit(0);
  });

  process.on("SIGINT", async () => {
    await cleanup();
    process.exit(0);
  });

  process.on("SIGTERM", async () => {
    await cleanup();
    process.exit(0);
  });

  // setTimeout(() => {
  //   throw new Error("Something happened");
  // }, 10000);

  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${service.get(
      "env"
    )} mode.`
  );
});
